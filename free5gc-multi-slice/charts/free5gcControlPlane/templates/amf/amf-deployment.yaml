#
# Software Name : towards5gs-helm
# SPDX-FileCopyrightText: Copyright (c) 2021 Orange
# SPDX-License-Identifier: Apache-2.0
#
# This software is distributed under the Apache License 2.0,
# the text of which is available at todo
# or see the "LICENSE" file for more details.
#
# Author: Abderaouf KHICHANE, Ilhem FAJJARI, Ayoub BOUSSELMI
# Software description: An open-source project providing Helm charts to deploy 5G components (Core + RAN) on top of Kubernetes
#
{{- if .Values.amf.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.amf.name }}
  labels:
    project: {{ .Values.global.projectName }}
    nf: {{ .Values.amf.name }}
spec:
  selector:
    matchLabels:
      project: {{ .Values.global.projectName }}
      nf: {{ .Values.amf.name }}
  replicas: {{ .Values.amf.replicaCount }}
  template:
    metadata:
      labels:
        project: {{ .Values.global.projectName }}
        nf: {{ .Values.amf.name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/amf/amf-configmap.yaml") . | sha256sum }}-{{ include (print $.Template.BasePath "/global/free5gc-configmap.yaml") . | sha256sum }}
{{- if not .Values.global.amf.service.ngap.enabled }}
        k8s.v1.cni.cncf.io/networks: '[
          { "name": "{{ .Values.global.n2network.name }}", "interface": "n2", "ips": [ "{{ .Values.global.amf.n2if.ipAddress }}/{{ .Values.global.n2network.cidr }}" ] }
          ]'
{{- end }}
    spec:
      initContainers:
      - name: wait-nrf
        image: {{ .Values.initcontainers.curl.registry }}/{{ .Values.initcontainers.curl.image }}:{{ .Values.initcontainers.curl.tag }}
        env:
        - name: DEPENDENCIES
          value: {{ .Values.global.sbi.scheme }}://{{ .Values.nrf.service.name }}:{{ .Values.nrf.port }}
        command: ['sh', '-c', 'set -x; for dependency in $DEPENDENCIES; do while [ $(curl --connect-timeout 1 -s -o /dev/null -w "%{http_code}" $dependency) -ne 200 ]; do echo waiting for dependencies; sleep 1; done; done;']
      containers:
      - image: {{ .Values.global.image.registry }}/{{ .Values.amf.image.name }}:{{ .Values.amf.image.tag }}
        name: {{ .Values.amf.name }}
        ports:
        - name: namf
          containerPort: {{ .Values.amf.port }}
        - name: n2
          containerPort: {{ .Values.global.amf.service.ngap.port }}
          protocol: {{ .Values.global.amf.service.ngap.protocol }}
        command: ["./amf"]
        args: ["-amfcfg", "../config/amfcfg.yaml"]   
        env:
          - name: GIN_MODE
            value: release
        volumeMounts:
        - mountPath: {{ .Values.volume.mount }}
          name: {{ .Values.amf.volume.name }}
        resources:
          requests:
            memory: "64Mi"
            cpu: "150m"
          limits:
            memory: "64Mi"
            cpu: "150m"
      # nodeSelector:
      #   kubernetes.io/hostname: worker-1
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
      - name: {{ .Values.amf.volume.name }}
        projected:
          sources:
          - configMap:
              name: {{ .Values.amf.configmap.name }}
          - configMap:
              name: {{ .Values.free5gc.configmap.name }}
{{- end }}
