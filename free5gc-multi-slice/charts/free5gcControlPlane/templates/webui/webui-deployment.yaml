#
# Software Name : towards5gs-helm
# SPDX-FileCopyrightText: Copyright (c) 2021 Orange
# SPDX-License-Identifier: Apache-2.0
#
# This software is distributed under the Apache License 2.0,
# the text of which is available at todo
# or see the "LICENSE" file for more details.
#
# Author: Abderaouf KHICHANE, Ilhem FAJJARI, Ayoub BOUSSELMI
# Software description: An open-source project providing Helm charts to deploy 5G components (Core + RAN) on top of Kubernetes
#
{{- if .Values.webui.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.webui.name }}
  labels:
    project: {{ .Values.global.projectName }}
    app: {{ .Values.webui.name }}
spec:
  selector:
    matchLabels:
      project: {{ .Values.global.projectName }}
      app: {{ .Values.webui.name }}
  replicas: {{ .Values.webui.replicaCount }}
  template:
    metadata:
      labels:
        project: {{ .Values.global.projectName }}
        app: {{ .Values.webui.name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/webui/webui-configmap.yaml") . | sha256sum }}-{{ include (print $.Template.BasePath "/global/free5gc-configmap.yaml") . | sha256sum }}
    spec:
      initContainers:
      - name: wait-mongo
        image: {{ .Values.initcontainers.busybox.image }}:{{ .Values.initcontainers.busybox.tag }}
        env:
        - name: DEPENDENCIES
          value: {{ .Values.mongodb.service.name }}:{{ .Values.mongodb.service.port }}
        command: ["sh", "-c", "until nc -z $DEPENDENCIES; do echo waiting for the MongoDB; sleep 2; done;"]
      containers:
      - image: {{ .Values.global.image.registry }}/{{ .Values.webui.image.name }}:{{ .Values.webui.image.tag }}
        name: {{ .Values.webui.name }}
        ports:
        - containerPort: {{ .Values.webui.port }}
        command: ["./webconsole"]
        env:
          - name: GIN_MODE
            value: release
        volumeMounts:
        - mountPath: {{ .Values.volume.mount }}
          name: {{ .Values.webui.volume.name }}
        readinessProbe:
          initialDelaySeconds: 0
          periodSeconds: 1
          timeoutSeconds: 1
          failureThreshold:  40
          successThreshold: 1
          httpGet:
            port: {{ .Values.webui.port }}
        livenessProbe:
          initialDelaySeconds: 120
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
          httpGet:
            port: {{ .Values.webui.port }}
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "64Mi"
            cpu: "100m"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
      - name: {{ .Values.webui.volume.name }}
        projected:
          sources:
          - configMap:
              name: {{ .Values.webui.configmap.name }}
          - configMap:
              name: {{ .Values.free5gc.configmap.name }}
{{- end }}
