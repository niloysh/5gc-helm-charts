#
# Software Name : towards5gs-helm
# SPDX-FileCopyrightText: Copyright (c) 2021 Orange
# SPDX-License-Identifier: Apache-2.0
#
# This software is distributed under the Apache License 2.0,
# the text of which is available at todo
# or see the "LICENSE" file for more details.
#
# Author: Abderaouf KHICHANE, Ilhem FAJJARI, Ayoub BOUSSELMI
# Software description: An open-source project providing Helm charts to deploy 5G components (Core + RAN) on top of Kubernetes
#
{{- if .Values.n3iwf.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.n3iwf.name }}
  labels:
    project: {{ .Values.global.projectName }}
    nf: n3iwf
spec:
  selector:
    matchLabels:
      project: {{ .Values.global.projectName }}
      nf: n3iwf
  replicas: {{ .Values.n3iwf.replicaCount }}
  template:
    metadata:
      labels:
        project: {{ .Values.global.projectName }}
        nf: {{ .Values.n3iwf.name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/n3iwf/n3iwf-configmap.yaml") . | sha256sum }}-{{ include (print $.Template.BasePath "/n3iwf/free5gc-configmap.yaml") . | sha256sum }}
        k8s.v1.cni.cncf.io/networks: '[
{{- if not .Values.global.ovn4nfv.enabled }}
          { "name": "{{ .Values.global.n3network.name }}", "interface": "n3", "ips": [ "{{ .Values.n3iwf.n3if.ipAddress }}/{{ .Values.global.n3network.cidr }}" ] },
{{- end }}
{{- if not .Values.global.amf.service.ngap.enabled }}
          { "name": "{{ .Values.global.n2network.name }}", "interface": "n2", "ips": [ "{{ .Values.n3iwf.n2if.ipAddress }}/{{ .Values.global.n2network.cidr }}" ] },
{{- end }}
          { "name": "{{ .Values.n3iwf.ike.name }}", "interface": "ike", "ips": [ "{{ .Values.n3iwf.ike.prefixIP }}.{{ .Values.n3iwf.ike.suffixIP }}/24" ] }
          ]'
{{- if .Values.global.ovn4nfv.enabled }}
        k8s.v1.cni.cncf.io/networks: {{ .Values.global.ovn4nfv.name }}
        k8s.plugin.opnfv.org/nfn-network: '{ "type": "ovn4nfv", "interface": [{ "name": "{{ .Values.global.ovn4nfv.n3network.name }}", "ipAddress": "{{ .Values.n3iwf.n3if.ipAddress }}", "interface": "n3" , "defaultGateway": "false"}]}'
{{- end }}
    spec:
      containers:
      - image: {{ .Values.global.image.registry }}/{{ .Values.n3iwf.image.name }}:{{ .Values.n3iwf.image.tag }}
        name: {{ .Values.n3iwf.name }}
        command: ["sh", "-c", "../config/n3iwf-ipsec.sh && ./n3iwf -n3iwfcfg ../config/n3iwfcfg.yaml"]
        env:
        - name: GIN_MODE
          value: release
        securityContext:
          capabilities:
            add: ["NET_ADMIN"]
        volumeMounts:
        - mountPath: {{ .Values.volume.mount }}
          name: {{ .Values.n3iwf.volume.name }}
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "64Mi"
            cpu: "250m"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
      - name: {{ .Values.n3iwf.volume.name }}
        projected:
          sources:
          - configMap:
              name: {{ .Values.n3iwf.configmap.name }}
              items:
              - key: n3iwfcfg.yaml
                path: n3iwfcfg.yaml
              - key: n3iwf-ipsec.sh
                path: n3iwf-ipsec.sh
                mode: 0777
          - configMap:
              name: {{ .Values.free5gc.configmap.name }}
{{- end }}
